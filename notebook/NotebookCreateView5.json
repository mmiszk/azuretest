{
	"name": "NotebookCreateView5",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "mmApacheSpark2",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/49826b5d-2123-4d5a-93cc-eb331ee81c53/resourceGroups/synRG/providers/Microsoft.Synapse/workspaces/synrg2/bigDataPools/mmApacheSpark2",
				"name": "mmApacheSpark2",
				"type": "Spark",
				"endpoint": "https://synrg2.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mmApacheSpark2",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"tags": [
						"parameters"
					]
				},
				"source": [
					"param_th = \"7E7\"\r\n",
					""
				],
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"from azureml.opendatasets import UsLaborPPICommodity\n",
					"\n",
					"data = UsLaborPPICommodity()\n",
					"df = data.to_spark_dataframe()\n",
					"# Display 10 rows\n",
					"display(df.limit(2))"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"topItems_select = df.select(\"item_code\", \"year\",\"period\",\"value\")\r\n",
					"topItems_select.createOrReplaceTempView(\"topItems_view\")\r\n",
					"topItems_select.show(3)"
				],
				"execution_count": 12
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# WWWWWW2\r\n",
					"\r\n",
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW top_items as  \r\n",
					"select item_code, sum(value) as sumvalue from topItems_view group by item_code order by sum(value) desc"
				],
				"execution_count": 13
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"topitems_view = sqlContext.table(\"top_items\")\r\n",
					"\r\n",
					"topitems_view.show(10)"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"top5ItemsOverall = (topitems_view.select(\"item_code\",\"sumvalue\").filter(\"sumvalue > \" + param_th)).limit(5)\r\n",
					"\r\n",
					"top5ItemsOverall.show()"
				],
				"execution_count": 17
			}
		]
	}
}